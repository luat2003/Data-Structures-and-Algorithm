/* A binary tree node has data, pointer to left child
   and a pointer to right child  

/*
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
};
*/

//Function to return a list containing the preorder traversal of the tree.
vector <int> preorder(Node* root)
{
  // Your code here
  vector<int> res;
  stack<Node*> q;
  q.push(root);
  while( !q.empty()){
      Node* tmp = q.top();
      res.push_back(tmp->data);
      q.pop();
      if( tmp->right != NULL){
          q.push(tmp->right);
      }
      if( tmp->left != NULL ){
          q.push(tmp->left);
      }
  }
  return res;
}

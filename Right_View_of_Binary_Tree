/* A binary tree node has data, pointer to left child
   and a pointer to right child 
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */

// Should return  right view of tree
class Solution
{
    public:
    //Function to return list containing elements of right view of binary tree.
    vector<int> rightView(Node *root)
    {
       // Your Code here
        if( root == NULL ){
            return {};
        }
        vector<int> res;
        queue<Node*> q;
        q.push(root);
        while(!q.empty()){
            int n = q.size();
            int now;
            while(n--){
                Node* tmp = q.front();
                q.pop();
                now = tmp->data;
                if( tmp->left ){
                    q.push(tmp->left);
                }
                if( tmp->right ){
                    q.push(tmp->right);
                }
            }
            res.push_back(now);
        }
        return res;
    }
};

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeNodes(ListNode* head) {
        ListNode* tmp = NULL;
        ListNode* newhead = NULL;
        int sum = 0;
        while( head != NULL && head->val == 0 ){
            head = head->next;
        }
        while( head != NULL ){
            if( head->val == 0 ){
                ListNode* node = new ListNode;
                node->val = sum;
                node->next = NULL;
                if( tmp == NULL ){
                    newhead = tmp = node;
                }else{
                    tmp->next = node;
                    tmp = tmp->next;
                }
                sum = 0;
            }else{
                sum += head->val;
            }
            head = head->next;
        }
        return newhead;
    }
};
